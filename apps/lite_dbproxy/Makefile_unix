################OPTION###################
# release or debug
VERTYPE=RELEASE

KERNEL:=$(shell uname)
LIBDIR = linux
CPPSTD = c++11

ARCH:=$(shell uname -m)
RC:=$(ARCH)
BIT32:=i686
BIT64:=x86_64

$(info KERNEL=$(KERNEL))
$(info ARCH=$(ARCH))

ifeq ($(KERNEL),Darwin)
    LIBDIR = osx
endif

ifeq ($(RC),$(BIT32))
	SHAREDLIB = -lefc32 -leso32 -lrt -lm -ldl -lpthread -lcrypto -lssl
else
	SHAREDLIB = -lefc64 -leso64 -liconv -ldl -lpthread -lcrypto -lssl
endif

ifeq ($(VERTYPE), RELEASE)
CCOMPILEOPTION = -fPIC -c -g -O2 -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -fPIC -c -g -O2 -fpermissive -D__MAIN__
DBPROXY = dbproxy
else
CCOMPILEOPTION = -fPIC -c -g -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -fPIC -c -g -fpermissive -DDEBUG -D__MAIN__
DBPROXY = dbproxy_d
endif

CCOMPILE = gcc
CPPCOMPILE = g++
INCLUDEDIR = \
	-I../../../efc \
	-I../../../eco \
	-I../../../eco/inc \
	-I../../../elog \
	-I../../../elog/inc \
	-I../../../enaf \
	-I../../../enaf/inc \
	-I../../../enaf/filter/http \
	-I../../../CxxJDK/efc \
	-I../../../CxxFiber \
	-I../../../CxxFiber/inc \
	-I../../../CxxLog4j \
	-I../../../CxxLog4j/inc \
	-I../../../CxxConet \
	-I../../../CxxConet/inc \
	-I../../../CxxConet/filter/http \
	-I/usr/local/Cellar/openssl/1.0.2g/include \

LINK = g++
LINKOPTION = -std=$(CPPSTD) -g
LIBDIRS = -L../../../efc/lib/$(LIBDIR) -L../../../CxxJDK/lib/$(LIBDIR)
APPENDLIB = 

BASE_SRC += $(sort $(wildcard ../../../efc/utils/src/*.cpp ../../../CxxJDK/efc/utils/src/*.cpp))
BASE_SRC += $(sort $(wildcard ../../../eco/src/*.cpp ../../../eco/src/*.c  ../../../CxxFiber/src/*.cpp ../../../CxxFiber/src/*.c))
BASE_SRC += $(sort $(wildcard ../../../enaf/src/*.cpp ../../../enaf/filter/http/*.cpp  ../../../CxxConet/src/*.cpp ../../../CxxConet/filter/http/*.cpp))
BASE_SRC += $(sort $(wildcard ../../../elog/src/*.cpp ../../../CxxLog4j/src/*.cpp))
BASE_OBJS   += $(patsubst %.cpp,%.o, $(patsubst %.c,%.o, $(BASE_SRC)))

DBPROXY_OBJS = main.o ../../dblib/src/EDatabase.o \

$(DBPROXY): $(BASE_OBJS) $(DBPROXY_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(DBPROXY) $(LIBDIRS) $(BASE_OBJS) $(DBPROXY_OBJS) $(SHAREDLIB) $(APPENDLIB)

clean: 
	rm -f $(BASE_OBJS) $(DBPROXY_OBJS) $(BENCHMARK)

all: clean $(DBPROXY) clean
.PRECIOUS:%.cpp %.c
.SUFFIXES:
.SUFFIXES:  .c .o .cpp

.cpp.o:
	$(CPPCOMPILE) -c -o $*.o $(CPPCOMPILEOPTION) $(INCLUDEDIR)  $*.cpp

.c.o:
	$(CCOMPILE) -c -o $*.o $(CCOMPILEOPTION) $(INCLUDEDIR) $*.c
